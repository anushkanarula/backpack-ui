{"version":3,"file":"main.e5ce17e8ac49742039cb.bundle.js","sources":["webpack:///./src/hoc/clickOutside/index.jsx"],"sourcesContent":["import React, { Component } from \"react\";\n\nconst clickOutside = (WrappedComponent) => {\n  class HigherOrderComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n\n    componentDidMount() {\n      if (typeof this.innerRef === \"undefined\") {\n        console.warn(\"Incorrect or missing ref on enhanced component; ref must use props.innerRef\"); // eslint-disable-line no-console\n      }\n\n      if (typeof window !== \"undefined\") {\n        window.addEventListener(\"click\", this.handleClickOutside, false);\n      }\n    }\n\n    componentWillUnmount() {\n      if (typeof window !== \"undefined\") {\n        window.removeEventListener(\"click\", this.handleClickOutside, false);\n      }\n    }\n\n    handleClickOutside(event) {\n      const target = event.target;\n      const isPassedFunction = typeof this.outerRef.handleClickOutside === \"function\";\n      const notTarget = !this.innerRef || !this.innerRef.contains(target);\n\n      if (notTarget && isPassedFunction) {\n        this.outerRef.handleClickOutside(event);\n      }\n    }\n\n    render() {\n      return (\n        <WrappedComponent\n          {...this.props}\n          innerRef={node => (this.innerRef = node)}\n          ref={node => (this.outerRef = node)}\n        />\n      );\n    }\n  }\n\n  return HigherOrderComponent;\n};\n\nexport default clickOutside;\n"],"mappings":"AAAA","sourceRoot":""}